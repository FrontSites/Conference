// Project Initializer with Git Integration
import { exec } from 'child_process';
import { promisify } from 'util';
import fs from 'fs-extra';
import path from 'path';
import readline from 'readline';

const execAsync = promisify(exec);

class ProjectInitializer {
  constructor() {
    this.projectConfig = {
      name: this.getProjectNameFromFolder(),
      description: '',
      githubUsername: 'FrontSites',
      gitEnabled: true,
      autoCommit: true
    };
  }

  getProjectNameFromFolder() {
    try {
      const currentDir = process.cwd();
      const folderName = path.basename(currentDir);
      
      // –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è GitHub
      const cleanName = folderName
        .toLowerCase()
        .replace(/[^a-z0-9-]/g, '-')
        .replace(/--+/g, '-')
        .replace(/^-|-$/g, '');
      
      return cleanName || 'wordpress-theme';
    } catch {
      return 'wordpress-theme';
    }
  }

  async init() {
    console.log(`
üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ù–û–í–û–ì–û –ü–†–û–ï–ö–¢–ê
================================

–°–æ–∑–¥–∞—ë–º –Ω–æ–≤—ã–π WordPress Theme –ø—Ä–æ–µ–∫—Ç —Å –ø–æ–ª–Ω–æ–π –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–µ–π!
    `);

    await this.collectProjectInfo();
    await this.setupProject();
    await this.initializeGit();
    await this.showFinalInstructions();
  }

  async collectProjectInfo() {
    const rl = readline.createInterface({
      input: process.stdin,
      output: process.stdout
    });

    const question = (prompt) => new Promise(resolve => {
      rl.question(prompt, resolve);
    });

    try {
      console.log('üìù –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:\n');
      
      this.projectConfig.name = await question(`–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞ (${this.projectConfig.name}): `) || this.projectConfig.name;
      this.projectConfig.description = await question('–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: ') || 'WordPress Theme with Vite + Gulp automation';
      
      const gitChoice = await question('–°–æ–∑–¥–∞—Ç—å Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π? (y/n): ');
      this.projectConfig.gitEnabled = gitChoice.toLowerCase() === 'y' || gitChoice === '';
      
      if (this.projectConfig.gitEnabled) {
        const autoChoice = await question('–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–º–∏—Ç—ã? (y/n): ');
        this.projectConfig.autoCommit = autoChoice.toLowerCase() === 'y' || autoChoice === '';
      }

    } finally {
      rl.close();
    }
  }

  async setupProject() {
    console.log('\nüîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞...');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º package.json
    await this.updatePackageJson();
    
    // –°–æ–∑–¥–∞—ë–º –±–∞–∑–æ–≤—ã–µ —Ñ–∞–π–ª—ã
    await this.createProjectFiles();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞
    await this.setupPermissions();
    
    console.log('‚úÖ –ü—Ä–æ–µ–∫—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
  }

  async updatePackageJson() {
    try {
      const packagePath = 'package.json';
      const packageData = await fs.readJSON(packagePath);
      
      packageData.name = this.projectConfig.name;
      packageData.description = this.projectConfig.description;
      packageData.version = '1.0.0';
      
      await fs.writeJSON(packagePath, packageData, { spaces: 2 });
      console.log('üì¶ package.json –æ–±–Ω–æ–≤–ª—ë–Ω');
      
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å package.json:', error.message);
    }
  }

  async createProjectFiles() {
    // –°–æ–∑–¥–∞—ë–º README –¥–ª—è –ø—Ä–æ–µ–∫—Ç–∞
    const readmeContent = `# ${this.projectConfig.name}

${this.projectConfig.description}

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

\`\`\`bash
# 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm install

# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
npm run setup-permissions

# 3. –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
npm run dev
\`\`\`

## üì¶ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

\`\`\`bash
npm run dev                 # –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
npm run dev-git            # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ + –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–º–∏—Ç—ã
npm run build              # –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
npm run git:status         # –°—Ç–∞—Ç—É—Å Git
\`\`\`

## üåê GitHub

–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/${this.projectConfig.githubUsername}/${this.projectConfig.name}

---

**–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é WordPress Theme Development System v2.0** üöÄ
`;

    await fs.writeFile('README.md', readmeContent);
    console.log('üìù README.md —Å–æ–∑–¥–∞–Ω');

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç—Å—è –≤ .devconfig.json
    console.log('‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ .devconfig.json');
  }

  async setupPermissions() {
    try {
      console.log('üõ°Ô∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞...');
      await execAsync('npm run setup-permissions');
      console.log('‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞:', error.message);
    }
  }

  async initializeGit() {
    if (!this.projectConfig.gitEnabled) {
      console.log('‚è≠Ô∏è Git –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞');
      return;
    }

    try {
      console.log('\nüåê –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git...');
      
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Git
      await execAsync('git init');
      await execAsync('git branch -M main');
      
      // –°–æ–∑–¥–∞—ë–º .gitignore
      await this.createGitignore();
      
      // –ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
      await execAsync('git add .');
      await execAsync(`git commit -m "üéâ Initial commit - ${this.projectConfig.name}"`);
      
      console.log('‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
      // –ü—ã—Ç–∞–µ–º—Å—è —Å–æ–∑–¥–∞—Ç—å GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      await this.createGitHubRepo();
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Git:', error.message);
    }
  }

  async createGitignore() {
    const gitignoreContent = `# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build outputs
/public/build/
*.tgz
*.tar.gz

# Environment files
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# WordPress specific
wp-config.php
wp-content/uploads/
wp-content/cache/
wp-content/backup-db/

# Project specific
performance.log
notifications.log
backups/
*.bak
.git-version

# Temporary files
*.tmp
*.temp
.cache/
`;

    await fs.writeFile('.gitignore', gitignoreContent);
    console.log('üìù .gitignore —Å–æ–∑–¥–∞–Ω');
  }

  async createGitHubRepo() {
    try {
      console.log('üåê –°–æ–∑–¥–∞–Ω–∏–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub CLI
      try {
        await execAsync('gh --version');
        
        const createCommand = `gh repo create ${this.projectConfig.githubUsername}/${this.projectConfig.name} --public --description "${this.projectConfig.description}" --clone=false`;
        await execAsync(createCommand);
        
        console.log(`‚úÖ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω: https://github.com/${this.projectConfig.githubUsername}/${this.projectConfig.name}`);
        
        // –î–æ–±–∞–≤–ª—è–µ–º remote –∏ –ø—É—à–∏–º
        const remoteUrl = `https://github.com/${this.projectConfig.githubUsername}/${this.projectConfig.name}.git`;
        await execAsync(`git remote add origin ${remoteUrl}`);
        await execAsync('git push -u origin main');
        
        console.log('üöÄ –ö–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub!');
        
      } catch (ghError) {
        console.log('\n‚ö†Ô∏è GitHub CLI –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –æ—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è');
        console.log('üìã –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤—Ä—É—á–Ω—É—é:');
        console.log(`1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com/new`);
        console.log(`2. –ù–∞–∑–≤–∞–Ω–∏–µ: ${this.projectConfig.name}`);
        console.log(`3. –û–ø–∏—Å–∞–Ω–∏–µ: ${this.projectConfig.description}`);
        console.log(`4. –°–¥–µ–ª–∞–π—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–º –∏ —Å–æ–∑–¥–∞–π—Ç–µ`);
        console.log(`5. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã:`);
        console.log(`   git remote add origin https://github.com/${this.projectConfig.githubUsername}/${this.projectConfig.name}.git`);
        console.log(`   git push -u origin main`);
      }
      
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π:', error.message);
    }
  }

  async showFinalInstructions() {
    console.log(`
üéâ –ü–†–û–ï–ö–¢ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù!
=========================

üìÅ –ü—Ä–æ–µ–∫—Ç: ${this.projectConfig.name}
üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${this.projectConfig.description}
üåê GitHub: https://github.com/${this.projectConfig.githubUsername}/${this.projectConfig.name}

üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:

1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É:
   ${this.projectConfig.autoCommit ? 'npm run dev-git' : 'npm run dev'}

2. –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
   npm run dev                 # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
   npm run build              # –°–±–æ—Ä–∫–∞
   npm run git:status         # –°—Ç–∞—Ç—É—Å Git
   ${this.projectConfig.autoCommit ? 'npm run git:watch          # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–º–∏—Ç—ã' : ''}

3. –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
   docs/MAIN-DOCS.md          # –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

${this.projectConfig.autoCommit ? `
ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ö–û–ú–ú–ò–¢–´ –í–ö–õ–Æ–ß–ï–ù–´:
- –ò–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–º–∏—Ç—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
- –í–µ—Ä—Å–∏–∏: v1, v2, v3...
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π push –Ω–∞ GitHub
` : ''}

üí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ npm run dev-git –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–º–º–∏—Ç–∞–º–∏!

**–£–¥–∞—á–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!** üöÄ
    `);
  }
}

// CLI –∑–∞–ø—É—Å–∫
const initializer = new ProjectInitializer();

if (process.argv[2] === 'init') {
  initializer.init().catch(console.error);
} else {
  console.log(`
üöÄ PROJECT INITIALIZER
======================

–ö–æ–º–∞–Ω–¥–∞:
  node scripts/project-initializer.js init

–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
  npm run project:init
  `);
}

export default initializer; 