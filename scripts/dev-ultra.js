// Dev Ultra - –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
import { spawn } from 'child_process';
import { exec } from 'child_process';
import { promisify } from 'util';
import fs from 'fs-extra';
import path from 'path';

const execAsync = promisify(exec);

class DevUltra {
  constructor() {
    this.processes = [];
    this.isRunning = false;
    this.githubUsername = 'FrontSites';
    this.projectName = this.getProjectName();
  }

  getProjectName() {
    try {
      const packageJson = JSON.parse(fs.readFileSync('package.json', 'utf8'));
      if (packageJson.name && packageJson.name !== 'template') {
        return packageJson.name;
      }
    } catch {}
    
    try {
      const currentDir = process.cwd();
      const folderName = path.basename(currentDir);
      const cleanName = folderName
        .toLowerCase()
        .replace(/[^a-z0-9-]/g, '-')
        .replace(/--+/g, '-')
        .replace(/^-|-$/g, '');
      
      return cleanName || 'wordpress-theme';
    } catch {
      return 'wordpress-theme';
    }
  }

  async start() {
    console.log(`
üöÄ DEV ULTRA - –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ë–´–°–¢–†–ê–Ø –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø
===============================================

üéØ –¶–µ–ª—å: –ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –∫–æ–º–ø–∏–ª—è—Ü–∏—è + –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π Git
üì¶ –ü—Ä–æ–µ–∫—Ç: ${this.projectName}
üë§ GitHub: ${this.githubUsername}
‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø
    `);

    try {
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Git
      await this.setupGit();
      
      // 2. –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã
      await this.maximizePerformance();
      
      // 3. –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
      await this.startOptimizedProcesses();
      
      // 4. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
      this.setupSignalHandlers();
      
      this.isRunning = true;
      console.log('\n‚úÖ DEV ULTRA –∑–∞–ø—É—â–µ–Ω —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é!');
      console.log('üåê GitHub: https://github.com/' + this.githubUsername + '/' + this.projectName);
      console.log('‚ö° –ö–æ–º–ø–∏–ª—è—Ü–∏—è: –ú–ì–ù–û–í–ï–ù–ù–ê–Ø');
      console.log('üí° –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ DEV ULTRA:', error.message);
      await this.cleanup();
    }
  }

  async setupGit() {
    console.log('üîß –ë—ã—Å—Ç—Ä–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Git...');
    
    try {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å Git
      await execAsync('git status');
      console.log('‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–∞–π–¥–µ–Ω');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º remote
      try {
        const { stdout: remote } = await execAsync('git remote -v');
        if (remote.includes('github.com')) {
          console.log('‚úÖ GitHub remote –Ω–∞—Å—Ç—Ä–æ–µ–Ω');
          return;
        }
      } catch {}
      
      // –°–æ–∑–¥–∞—ë–º GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      await this.createGitHubRepo();
      
    } catch (error) {
      console.log('üìÅ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º...');
      
      // –£–¥–∞–ª—è–µ–º –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–π .git –µ—Å–ª–∏ –µ—Å—Ç—å
      try {
        await fs.remove('.git');
        console.log('üóëÔ∏è –£–¥–∞–ª—ë–Ω –ø–æ–≤—Ä–µ–∂–¥—ë–Ω–Ω—ã–π .git');
      } catch {}
      
      await this.initializeGitRepo();
      await this.createGitHubRepo();
    }
  }

  async initializeGitRepo() {
    try {
      await execAsync('git init');
      await execAsync('git branch -M main');
      
      // –°–æ–∑–¥–∞—ë–º .gitignore
      await this.createGitignore();
      
      // –ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
      await execAsync('git add .');
      await execAsync('git commit -m "üéâ Initial commit - DEV ULTRA MAX SPEED"');
      
      console.log('‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      
    } catch (error) {
      throw new Error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Git: ' + error.message);
    }
  }

  async createGitignore() {
    const gitignoreContent = `# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build outputs
/public/build/
*.tgz
*.tar.gz

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# WordPress specific
wp-config.php
wp-content/uploads/
wp-content/cache/
wp-content/backup-db/
wp-content/advanced-cache.php
wp-content/wp-cache-config.php

# Project specific
performance.log
notifications.log
backups/
*.bak
.git-version

# Temporary files
*.tmp
*.temp
.cache/
`;

    await fs.writeFile('.gitignore', gitignoreContent);
    console.log('‚úÖ .gitignore —Å–æ–∑–¥–∞–Ω');
  }

  async createGitHubRepo() {
    try {
      console.log('üåê –°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –Ω–∞ GitHub...');
      
      // –ò—Å–ø–æ–ª—å–∑—É–µ–º GitHub CLI –µ—Å–ª–∏ –¥–æ—Å—Ç—É–ø–µ–Ω
      try {
        await execAsync('gh --version');
        
        const createCommand = `gh repo create ${this.githubUsername}/${this.projectName} --public --description "WordPress Theme Development System with DEV ULTRA MAX SPEED" --clone=false`;
        await execAsync(createCommand);
        
        console.log(`‚úÖ –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω: https://github.com/${this.githubUsername}/${this.projectName}`);
        
        // –î–æ–±–∞–≤–ª—è–µ–º remote origin
        const remoteUrl = `https://github.com/${this.githubUsername}/${this.projectName}.git`;
        await execAsync(`git remote add origin ${remoteUrl}`);
        
        // –ü—É—à–∏–º –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
        await execAsync('git push -u origin main');
        
        console.log('üöÄ –ö–æ–¥ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub!');
        
      } catch (ghError) {
        console.log('‚ö†Ô∏è GitHub CLI –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–æ–∑–¥–∞–π—Ç–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –≤—Ä—É—á–Ω—É—é:');
        console.log(`1. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –Ω–∞ https://github.com/new`);
        console.log(`2. –ù–∞–∑–≤–∞–Ω–∏–µ: ${this.projectName}`);
        console.log(`3. –û–ø–∏—Å–∞–Ω–∏–µ: WordPress Theme Development System`);
        console.log(`4. –°–¥–µ–ª–∞–π—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–º`);
        console.log(`5. –í—ã–ø–æ–ª–Ω–∏—Ç–µ –∫–æ–º–∞–Ω–¥—ã:`);
        console.log(`   git remote add origin https://github.com/${this.githubUsername}/${this.projectName}.git`);
        console.log(`   git push -u origin main`);
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:', error.message);
    }
  }

  async maximizePerformance() {
    console.log('‚ö° –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
    process.env.NODE_OPTIONS = '--max-old-space-size=8192 --expose-gc --optimize-for-size';
    process.env.VITE_NODE_OPTIONS = '--max-old-space-size=8192';
    process.env.UV_THREADPOOL_SIZE = '256';
    process.env.GULP_OPTIMIZE = 'true';
    process.env.SASS_OPTIMIZE = 'true';
    
    // –û—Ç–∫–ª—é—á–∞–µ–º source maps –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
    process.env.GENERATE_SOURCEMAP = 'false';
    process.env.VITE_SOURCEMAP = 'false';
    
    console.log('‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏');
  }

  async startOptimizedProcesses() {
    console.log('üöÄ –ó–∞–ø—É—Å–∫ –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...');
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ —Å–∞–º—ã–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –¥–ª—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π —Å–∫–æ—Ä–æ—Å—Ç–∏
    const processes = [
      {
        name: 'Vite Dev Server',
        command: 'npm',
        args: ['run', 'vite-only'],
        color: '\x1b[36m' // Cyan
      },
      {
        name: 'Gulp MAX SPEED',
        command: 'npm',
        args: ['run', 'gulp'],
        color: '\x1b[33m' // Yellow
      },
      {
        name: 'Git Auto-commits',
        command: 'npm',
        args: ['run', 'git:watch'],
        color: '\x1b[32m' // Green
      }
    ];

    for (const processConfig of processes) {
      await this.spawnProcess(processConfig);
    }
    
    console.log('‚úÖ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–ø—É—â–µ–Ω—ã');
  }

  async spawnProcess(config) {
    return new Promise((resolve) => {
      const childProcess = spawn(config.command, config.args, {
        stdio: 'pipe',
        shell: true,
        env: { ...process.env }
      });

      childProcess.stdout.on('data', (data) => {
        const output = data.toString().trim();
        if (output) {
          console.log(`${config.color}[${config.name}]\x1b[0m ${output}`);
        }
      });

      childProcess.stderr.on('data', (data) => {
        const output = data.toString().trim();
        if (output && !output.includes('ExperimentalWarning')) {
          console.log(`${config.color}[${config.name}]\x1b[0m ‚ö†Ô∏è ${output}`);
        }
      });

      childProcess.on('close', (code) => {
        console.log(`${config.color}[${config.name}]\x1b[0m –∑–∞–≤–µ—Ä—à—ë–Ω —Å –∫–æ–¥–æ–º ${code}`);
      });

      this.processes.push({
        name: config.name,
        process: childProcess
      });

      // –î–∞—ë–º –ø—Ä–æ—Ü–µ—Å—Å—É –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫
      setTimeout(resolve, 500); // –£–º–µ–Ω—å—à–∏–ª–∏ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è
    });
  }

  setupSignalHandlers() {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ Ctrl+C
    process.on('SIGINT', async () => {
      console.log('\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...');
      await this.cleanup();
      process.exit(0);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–µ—Ä–º–∏–Ω–∞–ª–∞
    process.on('SIGTERM', async () => {
      console.log('\nüõë –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...');
      await this.cleanup();
      process.exit(0);
    });

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    process.on('uncaughtException', async (error) => {
      console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error.message);
      await this.cleanup();
      process.exit(1);
    });
  }

  async cleanup() {
    if (!this.isRunning) return;
    
    console.log('\nüßπ –ë—ã—Å—Ç—Ä–∞—è –æ—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤...');
    
    try {
      // –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
      for (const processInfo of this.processes) {
        try {
          console.log(`üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ ${processInfo.name}...`);
          processInfo.process.kill('SIGTERM');
        } catch (error) {
          console.warn(`‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ ${processInfo.name}:`, error.message);
        }
      }
      
      console.log('‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', error.message);
    }
    
    this.isRunning = false;
  }

  async showStatus() {
    console.log('\nüìä –°–¢–ê–¢–£–° DEV ULTRA MAX SPEED:');
    console.log('==============================');
    
    console.log(`üîÑ –°—Ç–∞—Ç—É—Å: ${this.isRunning ? 'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' : 'üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}`);
    console.log(`üìà –ü—Ä–æ—Ü–µ—Å—Å–æ–≤: ${this.processes.length}`);
    console.log(`üì¶ –ü—Ä–æ–µ–∫—Ç: ${this.projectName}`);
    console.log(`‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–ê–Ø`);
    console.log(`üåê GitHub: https://github.com/${this.githubUsername}/${this.projectName}`);
    
    for (const processInfo of this.processes) {
      const status = processInfo.process.killed ? 'üî¥' : 'üü¢';
      console.log(`  ${status} ${processInfo.name}`);
    }
  }
}

// CLI –∑–∞–ø—É—Å–∫
const devUltra = new DevUltra();

if (process.argv[2]) {
  const command = process.argv[2];
  
  switch (command) {
    case 'start':
      devUltra.start();
      break;
      
    case 'status':
      devUltra.showStatus();
      break;
      
    default:
      console.log(`
üöÄ DEV ULTRA - –ú–ê–ö–°–ò–ú–ê–õ–¨–ù–û –ë–´–°–¢–†–ê–Ø –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–Ø
===============================================

–ö–æ–º–∞–Ω–¥—ã:
  start     –ó–∞–ø—É—Å—Ç–∏—Ç—å DEV ULTRA MAX SPEED
  status    –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤

–ü—Ä–∏–º–µ—Ä:
  node scripts/dev-ultra.js start
  npm run dev-ultra
      `);
  }
} else {
  // –ó–∞–ø—É—Å–∫ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
  devUltra.start();
}

export default devUltra; 