// Force Refresh Script - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞
import { exec } from 'child_process';
import { promisify } from 'util';
import fs from 'fs-extra';
import path from 'path';

const execAsync = promisify(exec);

class ForceRefresh {
  constructor() {
    this.cssPath = 'assets/css/main.min.css';
    this.jsPath = 'assets/js/main.min.js';
  }

  async forceRefresh() {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—ç—à–∞...');
    
    try {
      // 1. –ö–æ–º–ø–∏–ª–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
      console.log('‚ö° –ö–æ–º–ø–∏–ª—è—Ü–∏—è —Ñ–∞–π–ª–æ–≤...');
      await execAsync('npm run scss');
      await execAsync('npm run js');
      
      // 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª—ã –æ–±–Ω–æ–≤–∏–ª–∏—Å—å
      const cssStats = await fs.stat(this.cssPath);
      const jsStats = await fs.stat(this.jsPath);
      
      console.log(`‚úÖ CSS –æ–±–Ω–æ–≤–ª—ë–Ω: ${cssStats.mtime.toLocaleString()}`);
      console.log(`‚úÖ JS –æ–±–Ω–æ–≤–ª—ë–Ω: ${jsStats.mtime.toLocaleString()}`);
      
      // 3. –°–æ–∑–¥–∞—ë–º —Ñ–∞–π–ª-–º–∞—Ä–∫–µ—Ä –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
      const markerContent = `/* Force Refresh Marker - ${new Date().toISOString()} */\n`;
      await fs.appendFile(this.cssPath, markerContent);
      
      console.log('üéØ –ö—ç—à –±—Ä–∞—É–∑–µ—Ä–∞ –±—É–¥–µ—Ç –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—ë–Ω');
      console.log('üí° –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ (Ctrl+F5)');
      
      return true;
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:', error.message);
      return false;
    }
  }

  async watchAndRefresh() {
    console.log('üëÄ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º...');
    
    const chokidar = await import('chokidar');
    
    const watcher = chokidar.default.watch(['src/**/*.scss', 'src/**/*.js'], {
      ignored: ['**/node_modules/**'],
      persistent: true
    });

    watcher.on('change', async (filePath) => {
      console.log(`üìù –ò–∑–º–µ–Ω—ë–Ω: ${path.basename(filePath)}`);
      await this.forceRefresh();
    });

    console.log('‚úÖ –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–æ');
  }
}

// CLI –∑–∞–ø—É—Å–∫
const forceRefresh = new ForceRefresh();

if (process.argv[2]) {
  const command = process.argv[2];
  
  switch (command) {
    case 'refresh':
      forceRefresh.forceRefresh();
      break;
      
    case 'watch':
      forceRefresh.watchAndRefresh();
      break;
      
    default:
      console.log(`
üîÑ FORCE REFRESH - –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –û–ë–ù–û–í–õ–ï–ù–ò–ï –ö–≠–®–ê
================================================

–ö–æ–º–∞–Ω–¥—ã:
  refresh   –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç—å –∫—ç—à
  watch     –û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º

–ü—Ä–∏–º–µ—Ä—ã:
  node scripts/force-refresh.js refresh
  node scripts/force-refresh.js watch
      `);
  }
} else {
  // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ
  forceRefresh.forceRefresh();
}

export default forceRefresh; 