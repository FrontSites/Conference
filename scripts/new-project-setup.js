// New Project Setup - Complete initialization with GitHub
import { exec } from 'child_process';
import { promisify } from 'util';
import fs from 'fs-extra';
import path from 'path';
import readline from 'readline';

const execAsync = promisify(exec);

class NewProjectSetup {
  constructor() {
    this.projectName = this.getProjectNameFromFolder();
    this.githubUsername = 'FrontSites';
    this.description = 'WordPress Theme Development System with Vite + Gulp automation';
  }

  getProjectNameFromFolder() {
    try {
      const currentDir = process.cwd();
      const folderName = path.basename(currentDir);
      
      // –û—á–∏—â–∞–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Ç —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è GitHub
      const cleanName = folderName
        .toLowerCase()
        .replace(/[^a-z0-9-]/g, '-')
        .replace(/--+/g, '-')
        .replace(/^-|-$/g, '');
      
      return cleanName || 'wordpress-theme';
    } catch {
      return 'wordpress-theme';
    }
  }

  async init() {
    console.log(`
üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ù–û–í–û–ì–û –ü–†–û–ï–ö–¢–ê
================================

üìÅ –ü—Ä–æ–µ–∫—Ç: ${this.projectName}
üë§ GitHub: @${this.githubUsername}
üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${this.description}
    `);

    try {
      // 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º GitHub CLI
      await this.checkGitHubCLI();
      
      // 2. –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π remote –µ—Å–ª–∏ –µ—Å—Ç—å
      await this.cleanupOldRemote();
      
      // 3. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Git –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
      await this.initializeGit();
      
      // 4. –°–æ–∑–¥–∞—ë–º .gitignore
      await this.createGitignore();
      
      // 5. –û–±–Ω–æ–≤–ª—è–µ–º package.json
      await this.updatePackageJson();
      
      // 6. –°–æ–∑–¥–∞—ë–º README
      await this.createReadme();
      
      // 7. –î–µ–ª–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç
      await this.makeInitialCommit();
      
      // 8. –°–æ–∑–¥–∞—ë–º GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
      await this.createGitHubRepository();
      
      // 9. –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–¥ –Ω–∞ GitHub
      await this.pushToGitHub();
      
      // 10. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
      await this.showSuccess();
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error.message);
      process.exit(1);
    }
  }

  async checkGitHubCLI() {
    try {
      console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ GitHub CLI...');
      await execAsync('gh auth status');
      console.log('‚úÖ GitHub CLI –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω');
    } catch (error) {
      console.error('‚ùå GitHub CLI –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω. –í—ã–ø–æ–ª–Ω–∏—Ç–µ: gh auth login');
      throw error;
    }
  }

  async cleanupOldRemote() {
    try {
      console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä—ã—Ö remote...');
      await execAsync('git remote remove origin').catch(() => {});
      console.log('‚úÖ –°—Ç–∞—Ä—ã–µ remote —É–¥–∞–ª–µ–Ω—ã');
    } catch (error) {
      // –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ - remote –º–æ–∂–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞—Ç—å
    }
  }

  async initializeGit() {
    try {
      console.log('üìÅ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Git...');
      
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ —É–∂–µ Git
      try {
        await execAsync('git status');
        console.log('‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      } catch {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –Ω–æ–≤—ã–π Git
        await execAsync('git init');
        await execAsync('git branch -M main');
        console.log('‚úÖ Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Git:', error.message);
      throw error;
    }
  }

  async createGitignore() {
    const gitignoreContent = `# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Build outputs
/public/build/
*.tgz
*.tar.gz

# Environment files (not used in this project)
# .env files removed - using .devconfig.json instead

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# WordPress specific
wp-config.php
wp-content/uploads/
wp-content/cache/
wp-content/backup-db/

# Project specific
performance.log
notifications.log
backups/
*.bak
.git-version

# Temporary files
*.tmp
*.temp
.cache/
`;

    await fs.writeFile('.gitignore', gitignoreContent);
    console.log('‚úÖ .gitignore —Å–æ–∑–¥–∞–Ω');
  }

  async updatePackageJson() {
    try {
      console.log('üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ package.json...');
      
      const packagePath = 'package.json';
      const packageData = await fs.readJSON(packagePath);
      
      packageData.name = this.projectName;
      packageData.description = this.description;
      packageData.version = '1.0.0';
      
      await fs.writeJSON(packagePath, packageData, { spaces: 2 });
      console.log('‚úÖ package.json –æ–±–Ω–æ–≤–ª—ë–Ω');
      
    } catch (error) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å package.json:', error.message);
    }
  }

  async createReadme() {
    const readmeContent = `# üöÄ ${this.projectName}

${this.description}

## üöÄ –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç

\`\`\`bash
# 1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm install

# 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
npm run setup-permissions

# 3. –ó–∞–ø—É—Å–∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–º–º–∏—Ç–∞–º–∏
npm run dev-git
\`\`\`

## üì¶ –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã

\`\`\`bash
npm run dev                 # –û—Å–Ω–æ–≤–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞
npm run dev-git            # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ + –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–º–∏—Ç—ã
npm run build              # –°–±–æ—Ä–∫–∞ –¥–ª—è –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞
npm run git:status         # –°—Ç–∞—Ç—É—Å Git
npm run git:watch          # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–º–∏—Ç—ã
\`\`\`

## üåê GitHub

–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π: https://github.com/${this.githubUsername}/${this.projectName}

---

**–°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é WordPress Theme Development System v2.0** üöÄ
`;

    await fs.writeFile('README.md', readmeContent);
    console.log('‚úÖ README.md —Å–æ–∑–¥–∞–Ω');
  }

  async makeInitialCommit() {
    try {
      console.log('üìù –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –∫–æ–º–º–∏—Ç–∞...');
      
      await execAsync('git add .');
      await execAsync(`git commit -m "üéâ Initial commit - ${this.projectName}"`);
      
      console.log('‚úÖ –ü–µ—Ä–≤—ã–π –∫–æ–º–º–∏—Ç —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–æ–º–º–∏—Ç–∞:', error.message);
      throw error;
    }
  }

  async createGitHubRepository() {
    try {
      console.log('üåê –°–æ–∑–¥–∞–Ω–∏–µ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...');
      
      const createCommand = `gh repo create ${this.githubUsername}/${this.projectName} --public --description "${this.description}" --clone=false`;
      await execAsync(createCommand);
      
      console.log(`‚úÖ GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω: https://github.com/${this.githubUsername}/${this.projectName}`);
      
    } catch (error) {
      if (error.message.includes('already exists')) {
        console.log('‚ö†Ô∏è –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π');
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è:', error.message);
        throw error;
      }
    }
  }

  async pushToGitHub() {
    try {
      console.log('üöÄ –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–¥–∞ –Ω–∞ GitHub...');
      
      // –î–æ–±–∞–≤–ª—è–µ–º remote origin
      const remoteUrl = `https://github.com/${this.githubUsername}/${this.projectName}.git`;
      await execAsync(`git remote add origin ${remoteUrl}`);
      
      // –ü—É—à–∏–º –∫–æ–¥
      await execAsync('git push -u origin main');
      
      console.log('‚úÖ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub!');
      
    } catch (error) {
      if (error.message.includes('already exists')) {
        // Remote —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ—Å—Ç–æ –ø—É—à–∏–º
        await execAsync('git push -u origin main');
        console.log('‚úÖ –ö–æ–¥ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω –Ω–∞ GitHub!');
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ GitHub:', error.message);
        throw error;
      }
    }
  }

  async showSuccess() {
    console.log(`
üéâ –ü–†–û–ï–ö–¢ –£–°–ü–ï–®–ù–û –°–û–ó–î–ê–ù!
=========================

üìÅ –ü—Ä–æ–µ–∫—Ç: ${this.projectName}
üåê GitHub: https://github.com/${this.githubUsername}/${this.projectName}
üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${this.description}

üöÄ –°–õ–ï–î–£–Æ–©–ò–ï –®–ê–ì–ò:

1. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–º–º–∏—Ç–∞–º–∏:
   npm run dev-git

2. –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
   npm run dev                 # –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
   npm run build              # –°–±–æ—Ä–∫–∞
   npm run git:status         # –°—Ç–∞—Ç—É—Å Git
   npm run git:watch          # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–º–∏—Ç—ã

3. –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è:
   docs/MAIN-DOCS.md          # –ü–æ–ª–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

ü§ñ –ê–í–¢–û–ú–ê–¢–ò–ß–ï–°–ö–ò–ï –ö–û–ú–ú–ò–¢–´:
- –ò–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–º–º–∏—Ç—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
- –í–µ—Ä—Å–∏–∏: v1, v2, v3...
- –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π push –Ω–∞ GitHub

üí° –°–æ–≤–µ—Ç: –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ npm run dev-git –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ –∫–æ–º–º–∏—Ç–∞–º–∏!

**–£–¥–∞—á–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏!** üöÄ
    `);
  }
}

// CLI –∑–∞–ø—É—Å–∫
const setup = new NewProjectSetup();

if (process.argv[2] === 'init') {
  setup.init().catch(console.error);
} else {
  console.log(`
üöÄ NEW PROJECT SETUP
====================

–ö–æ–º–∞–Ω–¥–∞:
  node scripts/new-project-setup.js init

–ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:
  npm run new-project
  `);
}

export default setup; 